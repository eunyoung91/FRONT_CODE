@mixin mq($screen-width) {
    @if $screen-width == 'screen-tablet'
    {
        @media screen and (min-width:768px) and (max-width:1024px) {
            @content;
        }
    }

    @else if $screen-width == 'screen-tablet2'
    {
        @media screen and (min-width:768px) and (max-width:1279px) {
            @content;
        }
    }

    @else if $screen-width == 'screen-mobile'
    {
        @media screen and (max-width:767px)
        {
            @content;
        }
    }

    @else if $screen-width == 'screen-mobile-sm'
    {
        @media screen and (max-width:400px)
        {
            @content;
        }
    }

    @else if $screen-width == 'screen-pc-full'
    {
        @media screen and (min-width:1280px)
        {
            @content;
        }
    }

    @else if $screen-width == 'screen-pc'
    {
        @media screen and (min-width:768px)
        {
            @content;
        }
    }
}

@mixin positionHidden() {
    position: absolute;
    top: -9999em;
    height: 0;
    overflow: hidden;
}

@mixin oppositionHidden() {
    position: inherit;
    top: 0;
    height: auto;
    overflow: inherit;
}

@mixin clearfix() {
    *zoom: 1;
    &:after {
        content: "";
        display: block;
        clear: both;
    }
}

@mixin contentReset() {
    content: "";
    display: inline-block;
}

@mixin buttonReset() {
    padding: 0;
    border: none;
    border-radius: 0;
    background: transparent;
    vertical-align: top;
    box-shadow: none;
}

@mixin buttonActionReset() {
    &:hover, 
    &:active, 
    &:visited {
        color: inherit;
        box-shadow: none;
    }
}
@mixin buttonActionReset-color($c) {
    &:hover, 
    &:active, 
    &:visited {
        color: $c;
    }
}

@mixin irReset() {
    display: inline-block;
    font-size: 0;
    vertical-align: top;
    a,
    button {
        display: inline-block;
        width: 100%;
        height: 100%;
    }
}

@mixin inputTextReset() {
    background: transparent;
    border: none;
    border-radius: 0;
    box-shadow: none;
    padding: 0;
}

@mixin hoverReset() {
    &:focus, &:hover {
        color: inherit;
        text-decoration: none;
    }
}


@mixin font-size-color-weight($s, $c, $w) {
    font-size: $s;
    color: $c;
    font-weight: $w;
}

@mixin font-glyphicon() {
    position: relative;
    top: 1px;
    display: inline-block;
    font-family: 'Glyphicons Halflings';
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
}
@mixin clip() {
    text-overflow: clip; 
    white-space: nowrap; 
    overflow: hidden;
}
@mixin ellipsis() {
    text-overflow: ellipsis; 
    white-space: nowrap; 
    overflow: hidden;
}
@mixin ellipsis-multi($n, $lineh) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $n;
    -webkit-box-orient: vertical;
    word-wrap:break-word; 
    line-height: $lineh + px;
    max-height: $lineh * $n + px;
    white-space: normal;
}

@mixin background-name-ext-repeat-poistion($n, $e, $r, $p) {
    background-image: url("//img.eduwill.net/resources/kin/dev/images/" + $n + "." + $e);
    background-repeat: $r;
    background-position: $p; 
}

@mixin placeholder-color($c) {
    &::placeholder {color: $c; }
    &::-webkit-input-placeholder {color: $c; }
    &::-moz-placeholder {color: $c; }
    &:-ms-input-placeholder {color: $c; }
    &:-moz-placeholder {color: $c; }
}

@mixin placeholder-weight($w) {
    &::placeholder {font-weight: $w; }
    &::-webkit-input-placeholder {font-weight: $w; }
    &::-moz-placeholder {font-weight: $w; }
    &:-ms-input-placeholder {font-weight: $w; }
    &:-moz-placeholder {font-weight: $w; }
}

@mixin rotate($r) {
    -webkit-transform: rotate($r);
    -ms-transform: rotate($r);
    transform: rotate($r);
}

@mixin translateY($y) {
    -webkit-transform: translateY($y);
    -ms-transform: translateY($y);
    transform: translateY($y);
}
@mixin translateX($x) {
    -webkit-transform: translateX($x);
    -ms-transform: translateX($x);
    transform: translateX($x);
}

@mixin transition-all($t) {
    -webkit-transition: all $t;
    -o-transition: all $t;
    transition: all $t;
}

@mixin imgguide($x, $y) {
    position: relative;
    text-decoration: none;
    img {
        width: 100%;
        position: relative;
        z-index: 1;
    }
    &:after {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 0;
        width: 100%;
        height: 100%;
        content: $x + " * " + $y ;
        background: #ddd;
        text-align: center;
        line-height: $y + px;
        @include font-size-color-weight(24px, $color-white, 700);
    }
}

@mixin tab() {
    @include clearfix();
    li {
        float: left;
        width: 50%;
        border: solid 1px $color-gray-light;
        border-right: none;
        background-color: #fafafa;
        &:first-child {
            border-left: none;
        }

        a {
            display: block;
            height: 30px;
            line-height: 30px;
            text-align: center;
            text-decoration: none;
            @include font-size-color-weight(13px, #6b7483, 400);
            .i-new {
                @include irReset();
                width: 15px;
                height: 15px;
                @include background-name-ext-repeat-poistion(icon_new, png, no-repeat, 0 0);
                background-size: 100%;
                background-color: #b8bfce;
                border-radius: 3px;
                margin: 14px 0 0 4px;
            }
        }

        &.active {
            border-color :$color-gray-light;
            border-bottom-color: $color-white;
            background-color: $color-white;
            & + li {
                border-left-color: $color-gray-light;
            }
            & a {
                color: $color-black;
                font-weight: 400;
                .i-new {
                    background-color: $color-black;
                }
            }
        }
    }
}

@function get-vw($target) { 
    $vw-context: (640 * 0.01) * 1px;
    @return ($target / $vw-context) * 1vw;
    
    //height: get-vw(176px); 
}

@mixin textline() {
    position: relative;
    padding-left: 10px;
    margin-left: 9px;
    &:before {
        content: "";
        display: inline-block;
        width: 1px;
        height: 10px;
        background-color: #ccc;
        position: absolute;
        top: 50%;
        left: 0px;
        margin-top: -5px;
    }
    &:first-child {
        padding-left: 0;
        margin-left: 0;
        &:before {
            display: none;
        }
    }
}

@mixin iconpack() {
    background-image: url("//img.eduwill.net/resources/kin/dev/images/icon/icon-pack.png");
    font-size: 1px;
    line-height: 0;
    color: transparent;
    display: inline-block;
    vertical-align: top;
    background-size: 360px 360px;
    background-repeat: no-repeat;
}

// promotion font-size vw
@mixin breakpoint($point) {
    @if $point == maxMobile {
        @media screen and (min-width: 720px) { @content ; }
    }
    @else if $point == midMobile {
        @media screen and (max-width: 719px) { @content ; }
    }   
}


@function lFont( $targetSize){
    @return ($targetSize) + px;
}


@function vwFont( $targetSize, $parentSize : 720 ){
    @return (($targetSize / $parentSize) * 100) + vw;
}

// @include fontSize(25);
@mixin fontSize($size) {
    @include breakpoint(maxMobile){
        font-size: lFont($size);
    }
    @include breakpoint(midMobile){
        font-size: vwFont($size);
    }
}

@mixin vwFont-720( $targetSize ){
    font-size: (($targetSize / 720) * 100) + vw;
}
    